name: Build and Deploy

on:
  workflow_dispatch:
  # push:
  #   paths:
  #     - 'transaction-service/**'
  #   branches:
  #     - main

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./transaction-service

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Cache Node Modules
        uses: actions/cache@v4
        with:
          path: transaction-service/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('transaction-service/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ hashFiles('transaction-service/package-lock.json') }}

      - name: Install Dependencies
        run: npm install

      - name: Run Prettier
        run: npm run format

      - name: Run Lint
        run: npm run lint

      - name: Build code with esbuild
        run: npx esbuild src/index.ts --bundle --platform=node --outdir=dist

      - name: Zip Lambda build
        run: zip -r lambda-build.zip dist

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: lambda-build
          path: ./transaction-service/lambda-build.zip

  deploy:
    needs: build
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./transaction-service/terraform

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: lambda-build
          path: ${{ github.workspace }}/transaction-service

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Initialize
        run: terraform init

      - name: Terraform Format
        run: terraform fmt

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: terraform plan

      - name: Terraform Apply
        run: terraform apply -auto-approve
